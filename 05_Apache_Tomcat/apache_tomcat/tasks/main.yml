---
- name: "1. 패키지 설치 - {{ packages }}"
  ansible.builtin.dnf:
    name: "{{ packages }}"
    state: present

- name: "2. 시스템 계정 생성 - {{ users }}"
  ansible.builtin.user:
    name: "{{ item }}"
    shell: /sbin/nologin
    system: true 
  loop:
    - "{{ users.tomcat_user }}"

- name: 3. 소스 다운로드 - {{ item.src }}
  ansible.builtin.unarchive:
    src: "{{ item.src }}"
    dest: /usr/local/
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    remote_src: true
  loop: "{{ source }}"

- name: 4. 환경변수 등록 - /home/tomcat/.bashrc
  ansible.builtin.lineinfile:
    path: /home/tomcat/.bashrc
    line: "export CATALINA_HOME='{{ tomcat_file }}'"

- name: "5. 서비스 설정 - {{ tomcat_file }}/conf/server.xml(jinja2)"
  ansible.builtin.template:
    src: server.xml.j2
    dest: "{{ tomcat_file }}/conf/server.xml"
    owner: "{{ users.tomcat_user }}"
    group: "{{ users.tomcat_user }}"
    mode: '0600'
  notify: Start tomcat

- name: "5. 서비스 설정 - /etc/httpd/conf/httpd.conf(jinja2)"
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: /etc/httpd/conf/httpd.conf
    owner: root
    group: root
    mode: '0644'

- name: "5. 서비스 설정 - /etc/httpd/conf.d/ssl.conf(jinja2)"
  ansible.builtin.template:
    src: ssl.conf.j2
    dest: /etc/httpd/conf.d/ssl.conf
    owner: root
    group: root
    mode: '0644'
  notify: Start apache

- name: "6. Systemd 등록 - {{ item.dest }}"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0755'
  loop:
    - src: tomcat.service.j2
      dest: /usr/lib/systemd/system/tomcat.service

- name: "7. SSL 인증서 생성 - 개인키 생성(1/3)"
  community.crypto.openssl_privatekey:
    path: "{{ ssl_key_path }}"
    size: 2048
    type: RSA
    mode: '0600'

- name: "7. SSL 인증서 생성 - 인증서 CSR(2/3)"
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ ssl_key_path }}"
    country_name: "{{ ssl_country }}"
    state_or_province_name: "{{ ssl_state }}"
    locality_name: "{{ ssl_city }}"
    organization_name: "{{ ssl_org }}"
    organizational_unit_name: "{{ ssl_ou }}"
    common_name: "{{ ssl_cn }}"
    email_address: "{{ ssl_email }}"
  register: csr

- name: "7. SSL 인증서 생성 - Self-signed 인증서 생성(3/3)"
  community.crypto.x509_certificate:
    path: "{{ ssl_crt_path }}"
    privatekey_path: "{{ ssl_key_path }}"
    csr_content: "{{ csr.csr }}"
    provider: selfsigned
    selfsigned_not_after: "+3650d"
    mode: '0644'
  
- name: "7. 개인키 읽기권한 부여(위험)(3/3)"
  ansible.builtin.file:
    path: /etc/pki/tls/private/httpd.key
    mode: '0604'

- name: "8. 방화벽 포트 등록 - http, https"
  ansible.posix.firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  loop:
    - http
    - https
