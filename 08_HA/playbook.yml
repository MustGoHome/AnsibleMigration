---
- name: HA Proxy 구축
  hosts: localhost
  vars_files:
    - vars/vars.yml
  tasks:
    - name: Role - nfs
      ansible.builtin.include_role:
        name: nfs

    - name: 패키지 설치 - haproxy
      ansible.builtin.dnf:
        name: haproxy
        state: present
    
    - name: 서비스 설정 - /etc/haproxy/haproxy.cfg(j2)
      ansible.builtin.template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        validate: "haproxy -f %s -c"
    
    - name: 서비스 기동 - haproxy
      ansible.builtin.systemd:
        name: haproxy
        state: started
        enabled: true


- name: NFS 디렉터리 마운트
  hosts: webservers
  vars_files:
    - vars/vars.yml
  tasks:
    - name: 패키지 설치 - httpd, nfs-utils
      ansible.builtin.dnf:
        name:
          - httpd
          - nfs-utils
        state: present
    
    - name: 서비스 기동 - nfs-server
      ansible.builtin.systemd:
        name: nfs-server
        state: started
        enabled: true
    
    - name: NFS 디렉터리 생성
      ansible.builtin.file:
        path: /www
        state: directory
        mode: '0755'
    
    - name: NFS 디렉터리 마운트
      ansible.posix.mount:
        src: 192.168.40.10:/www
        path: /www
        state: mounted
        fstype: nfs
    
    - name: 서비스 설정 - /etc/httpd/conf/httpd.conf(j2)
      ansible.builtin.template:
        src: httpd.conf.j2
        dest: /etc/httpd/conf/httpd.conf
    
    - name: 서비스 설정 - /etc/httpd/conf.d/vhost.conf(j2)
      ansible.builtin.template:
        src: vhost.conf.j2
        dest: /etc/httpd/conf.d/vhost.conf

    - name: 서비스 기동 - httpd
      ansible.builtin.systemd:
        name: httpd
        state: started
        enabled: true
  
    - name: 방화벽 등록 - http, https
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      loop:
        - http
        - https
